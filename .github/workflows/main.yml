name: Build COD4 Cheat

on:
  # This enables the manual "Run workflow" button in the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Step 1: Get your source code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Create a manifest file to declare the d3dx9 dependency
      - name: Create vcpkg.json for d3dx9 dependency
        run: |
          echo '{ "dependencies": [ "d3dx9" ] }' > vcpkg.json

      # Step 3: Install the DirectX 9 dependency using the correct action version
      # THE FIX: Using the correct and valid version @v4 of the vcpkg action.
      - name: Install Dependencies via vcpkg
        uses: microsoft/vcpkg-action@v4
        with:
          vcpkgDirectory: ${{ runner.tool_cache }}/vcpkg
          vcpkgJsonGlob: '**/vcpkg.json'

      # Step 4: Patch the source code to fix the missing <chrono> include
      - name: Patch Common.hpp to include <chrono>
        run: |
          $content = Get-Content -Path Common.hpp -Raw
          "#include <chrono>`n$content" | Set-Content -Path Common.hpp -Force
        shell: pwsh

      # Step 5: Set up MSBuild to ensure it is available in the path
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      # Step 6: Build the project using MSBuild
      - name: Build the Solution
        run: msbuild.exe "DX9-Cheat-Base.sln" /p:Configuration=Release /p:Platform=x86

      # Step 7: Upload the final .dll file for you to download
      - name: Upload Cheat DLL
        uses: actions/upload-artifact@v4
        with:
          name: Built-Cheat-DLL
          path: Release/DX9-Cheat-Base.dll
